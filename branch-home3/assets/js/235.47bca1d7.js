(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{603:function(e,t,a){"use strict";a.r(t);var o=a(33),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"routine-load"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routine-load"}},[e._v("#")]),e._v(" ROUTINE LOAD")]),e._v(" "),a("h2",{attrs:{id:"description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[e._v("#")]),e._v(" description")]),e._v(" "),a("p",[e._v("Routine Load function allows users to submit a resident load task, and continuously load data into Doris by continuously reading data from the specified data source. Currently, only text data format (CSV) data is loaded from Kakfa by means of no authentication or SSL authentication.")]),e._v(" "),a("p",[e._v("Syntax:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE ROUTINE LOAD [db.]job_name ON tbl_name\n[load_properties]\n[job_properties]\nFROM data_source\n[data_source_properties]\n")])])]),a("ol",[a("li",[a("p",[e._v("[db.]job_name")]),e._v(" "),a("p",[e._v("The name of the load job, in the same database, only one job can run with the same name.")])]),e._v(" "),a("li",[a("p",[e._v("tbl_name")]),e._v(" "),a("p",[e._v("Specifies the name of the table that needs to be loaded.")])]),e._v(" "),a("li",[a("p",[e._v("load_properties")]),e._v(" "),a("p",[e._v("Used to describe the load data. grammar:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[column_separator],\n[columns_mapping],\n[where_predicates],\n[partitions]\n")])])]),a("ol",[a("li",[a("p",[e._v("column_separator:")]),e._v(" "),a("p",[e._v("Specify column separators, such as:")]),e._v(" "),a("p",[a("code",[e._v('COLUMNS TERMINATED BY ","')])]),e._v(" "),a("p",[e._v("The default is: "),a("code",[e._v("\\t")])])]),e._v(" "),a("li",[a("p",[e._v("columns_mapping:")]),e._v(" "),a("p",[e._v("Specifies the mapping of columns in the source data and defines how the derived columns are generated.")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Map column:")]),e._v(" "),a("p",[e._v("Specify in order, which columns in the source data correspond to which columns in the destination table. For columns that you want to skip, you can specify a column name that does not exist.")]),e._v(" "),a("p",[e._v("Suppose the destination table has three columns k1, k2, v1. The source data has 4 columns, of which columns 1, 2, and 4 correspond to k2, k1, and v1, respectively. Write as follows:")]),e._v(" "),a("p",[a("code",[e._v("COLUMNS (k2, k1, xxx, v1)")])]),e._v(" "),a("p",[e._v("Where xxx is a column that does not exist and is used to skip the third column in the source data.")])]),e._v(" "),a("li",[a("p",[e._v("Derived columns:")]),e._v(" "),a("p",[e._v("A column represented in the form of col_name = expr, which we call a derived column. That is, the value of the corresponding column in the destination table is calculated by expr.")]),e._v(" "),a("p",[e._v("Derived columns are usually arranged after the mapped column. Although this is not mandatory, Doris always parses the mapped columns first and then parses the derived columns.")]),e._v(" "),a("p",[e._v("Following an example, assume that the destination table also has column 4, v2, which is generated by the sum of k1 and k2. You can write as follows:")]),e._v(" "),a("p",[a("code",[e._v("COLUMNS (k2, k1, xxx, v1, v2 = k1 + k2);")])])])])]),e._v(" "),a("li",[a("p",[e._v("where_predicates")]),e._v(" "),a("p",[e._v("Used to specify filter criteria to filter out unwanted columns. Filter columns can be either mapped columns or derived columns.")]),e._v(" "),a("p",[e._v("For example, if we only want to load a column with k1 greater than 100 and k2 equal to 1000, we would write as follows:")]),e._v(" "),a("p",[a("code",[e._v("WHERE k1 > 100 and k2 = 1000")])])]),e._v(" "),a("li",[a("p",[e._v("partitions")]),e._v(" "),a("p",[e._v("Specifies which partitions of the load destination table. If not specified, it will be automatically loaded into the corresponding partition.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("p",[a("code",[e._v("PARTITION(p1, p2, p3)")])])])])]),e._v(" "),a("li",[a("p",[e._v("job_properties")]),e._v(" "),a("p",[e._v("A generic parameter that specifies a routine load job.")]),e._v(" "),a("p",[e._v("syntax:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('PROPERTIES (\n    "key1" = "val1",\n    "key2" = "val2"\n)\n')])])]),a("p",[e._v("Currently we support the following parameters:")]),e._v(" "),a("ol",[a("li",[a("p",[a("code",[e._v("desired_concurrent_number")])]),e._v(" "),a("p",[e._v("The degree of concurrency desired. A routine load job is split into multiple subtasks. This parameter specifies how many tasks can be executed simultaneously in a job. Must be greater than 0. The default is 3.")]),e._v(" "),a("p",[e._v("This concurrency is not the actual concurrency. The actual concurrency will be considered by the number of nodes in the cluster, the load, and the data source.")]),e._v(" "),a("p",[e._v("example:")]),e._v(" "),a("p",[a("code",[e._v('"desired_concurrent_number" = "3"')])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("max_batch_interval/max_batch_rows/max_batch_size")])]),e._v(" "),a("p",[e._v("These three parameters represent:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("The maximum execution time of each subtask, in seconds. The range is 5 to 60. The default is 10.")])]),e._v(" "),a("li",[a("p",[e._v("The maximum number of rows read per subtask. Must be greater than or equal to 200,000. The default is 200000.")])]),e._v(" "),a("li",[a("p",[e._v("The maximum number of bytes read per subtask. The unit is byte and the range is 100MB to 1GB. The default is 100MB.")])])]),e._v(" "),a("p",[e._v("These three parameters are used to control the execution time and throughput of a subtask. When either one reaches the threshold, the task ends.")]),e._v(" "),a("p",[e._v("example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"max_batch_interval" = "20",\n"max_batch_rows" = "300000",\n"max_batch_size" = "209715200"\n')])])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("max_error_number")])]),e._v(" "),a("p",[e._v("The maximum number of error lines allowed in the sampling window. Must be greater than or equal to 0. The default is 0, which means that no error lines are allowed.")]),e._v(" "),a("p",[e._v("The sampling window is max_batch_rows * 10. That is, if the number of error lines is greater than max_error_number in the sampling window, the routine job will be suspended, and manual intervention is required to check the data quality problem.")]),e._v(" "),a("p",[e._v("Lines that are filtered by the where condition are not counted as error lines.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("strict_mode")])]),e._v(" "),a("p",[e._v('Whether to enable strict mode, the default is on. If turned on, the column type transformation of non-null raw data is filtered if the result is NULL. Specified as "strict_mode" = "true"')])]),e._v(" "),a("li",[a("p",[e._v("timezone")]),e._v(" "),a("p",[e._v("Specifies the time zone in which the job will be loaded. The default by using session variable's timezone. This parameter affects all function results related to the time zone involved in the load.")])])])]),e._v(" "),a("li",[a("p",[e._v("data_source")]),e._v(" "),a("p",[e._v("The type of data source. Current support:")]),e._v(" "),a("p",[e._v("KAFKA")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("data_source_properties")])]),e._v(" "),a("p",[e._v("Specify information about the data source.")]),e._v(" "),a("p",[e._v("syntax:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('(\n    "key1" = "val1",\n    "key2" = "val2"\n)\n')])])]),a("ol",[a("li",[a("p",[e._v("KAFKA data source")]),e._v(" "),a("p",[a("code",[e._v("Kafka_broker_list")])]),e._v(" "),a("p",[e._v("Kafka's broker connection information. The format is ip:host. Multiple brokare separated by commas.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("p",[a("code",[e._v('"kafka_broker_list" = "broker1:9092,broker2:9092"')])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("kafka_topic")])]),e._v(" "),a("p",[e._v("Specify the topic of Kafka to subscribe to.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("p",[a("code",[e._v('"kafka_topic" = "my_topic"')])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("kafka_partitions/kafka_offsets")])]),e._v(" "),a("p",[e._v("Specify the kafka partition to be subscribed to, and the corresponding star offset for each partition.")]),e._v(" "),a("p",[e._v("Offset can specify a specific offset from 0 or greater, or:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("OFFSET_BEGINNING: Subscribe from the location where the data is avaie.")])]),e._v(" "),a("li",[a("p",[e._v("OFFSET_END: ​​Subscribe from the end.")])])]),e._v(" "),a("p",[e._v("If not specified, all partitions under topic are subscribed by default fromSET_END.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"kafka_partitions" = "0,1,2,3",\n"kafka_offsets" = "101,0,OFFSET_BEGINNING,OFFSET_END"\n')])])])]),e._v(" "),a("li",[a("p",[e._v("property")]),e._v(" "),a("p",[e._v("Specify custom kafka parameters.")]),e._v(" "),a("p",[e._v('The function is equivalent to the "--property" parameter in the kafka shel')]),e._v(" "),a("p",[e._v('When the value of the parameter is a file, you need to add the keyword: "FILbefore the value.')]),e._v(" "),a("p",[e._v('For information on how to create a file, see "HELP CREATE FILE;"')]),e._v(" "),a("p",[e._v("For more supported custom parameters, see the configuration items on the nt side in the official CONFIGURATION documentation for librdkafka.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"property.client.id" = "12345",\n"property.ssl.ca.location" = "FILE:ca.pem"\n')])])]),a("ol",[a("li",[a("p",[e._v("When connecting to Kafka using SSL, you need to specify the follg parameters:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"property.security.protocol" = "ssl",\n"property.ssl.ca.location" = "FILE:ca.pem",\n"property.ssl.certificate.location" = "FILE:client.pem",\n"property.ssl.key.location" = "FILE:client.key",\n"property.ssl.key.password" = "abcdefg"\n')])])]),a("p",[e._v("among them:")]),e._v(" "),a("p",[e._v('"property.security.protocol" and "property.ssl.ca.location" are requ to indicate the connection method is SSL and the location of the CA certate.')]),e._v(" "),a("p",[e._v("If the client authentication is enabled on the Kafka server, you alsod to set:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"property.ssl.certificate.location"\n"property.ssl.key.location"\n"property.ssl.key.password"\n')])])]),a("p",[e._v("Used to specify the public key of the client, the private key, and the word of the private key.")])]),e._v(" "),a("li",[a("p",[e._v("Specify the default starting offset for kafka partition")]),e._v(" "),a("p",[e._v("If kafka_partitions/kafka_offsets is not specified, all partitions are umed by default, and you can specify kafka_default_offsets to specify the star offset. The default is OFFSET_END, which starts at the end of the substion.")]),e._v(" "),a("p",[e._v("Values:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("OFFSET_BEGINNING: Subscribe from the location where the data is avaie.")])]),e._v(" "),a("li",[a("p",[e._v("OFFSET_END: Subscribe from the end.")])])]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("p",[a("code",[e._v('"property.kafka_default_offsets" = "OFFSET_BEGINNING"')])])])])])])]),e._v(" "),a("li",[a("p",[e._v("load data format sample")]),e._v(" "),a("p",[e._v("Integer class (TINYINT/SMALLINT/INT/BIGINT/LARGEINT): 1, 1000, 1234")]),e._v(" "),a("p",[e._v("Floating point class (FLOAT/DOUBLE/DECIMAL): 1.1, 0.23, .356\n \n    Date class (DATE/DATETIME): 2017-10-03, 2017-06-13 12:34:03.")]),e._v(" "),a("p",[e._v("String class (CHAR/VARCHAR) (without quotes): I am a student, a")]),e._v(" "),a("p",[e._v("NULL value: \\N")])])]),e._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" example")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Create a Kafka routine load task named test1 for the example_tbl of example_db. Specify group.id and client.id, and automatically consume all partitions by default, with subscriptions starting at the end (OFFSET_END)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CREATE ROUTINE LOAD example_db.test1 ON example_tbl\nCOLUMNS(k1, k2, k3, v1, v2, v3 = k1 * 100)\nPROPERTIES\n(\n    "desired_concurrent_number"="3",\n    "max_batch_interval" = "20",\n    "max_batch_rows" = "300000",\n    "max_batch_size" = "209715200",\n    "strict_mode" = "false"\n)\nFROM KAFKA\n(\n    "kafka_broker_list" = "broker1:9092,broker2:9092,broker3:9092",\n    "kafka_topic" = "my_topic",\n    "property.group.id" = "xxx",\n    "property.client.id" = "xxx"\n);\n')])])])]),e._v(" "),a("li",[a("p",[e._v("Create a Kafka routine load task named test1 for the example_tbl of example_db. The load task is in strict mode.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CREATE ROUTINE LOAD example_db.test1 ON example_tbl\nCOLUMNS(k1, k2, k3, v1, v2, v3 = k1 * 100),\nWHERE k1 > 100 and k2 like "%doris%"\nPROPERTIES\n(\n    "desired_concurrent_number"="3",\n    "max_batch_interval" = "20",\n    "max_batch_rows" = "300000",\n    "max_batch_size" = "209715200",\n    "strict_mode" = "false"\n)\nFROM KAFKA\n(\n    "kafka_broker_list" = "broker1:9092,broker2:9092,broker3:9092",\n    "kafka_topic" = "my_topic",\n    "kafka_partitions" = "0,1,2,3",\n    "kafka_offsets" = "101,0,0,200"\n);\n')])])])]),e._v(" "),a("li",[a("p",[e._v("load data from Kafka clusters via SSL authentication. Also set the client.id parameter. The load task is in non-strict mode and the time zone is Africa/Abidjan")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('CREATE ROUTINE LOAD example_db.test1 ON example_tbl\nCOLUMNS(k1, k2, k3, v1, v2, v3 = k1 * 100),\nWHERE k1 > 100 and k2 like "%doris%"\nPROPERTIES\n(\n    "desired_concurrent_number"="3",\n    "max_batch_interval" = "20",\n    "max_batch_rows" = "300000",\n    "max_batch_size" = "209715200",\n    "strict_mode" = "false",\n    "timezone" = "Africa/Abidjan"\n)\nFROM KAFKA\n(\n    "kafka_broker_list" = "broker1:9092,broker2:9092,broker3:9092",\n    "kafka_topic" = "my_topic",\n    "property.security.protocol" = "ssl",\n    "property.ssl.ca.location" = "FILE:ca.pem",\n    "property.ssl.certificate.location" = "FILE:client.pem",\n    "property.ssl.key.location" = "FILE:client.key",\n    "property.ssl.key.password" = "abcdefg",\n    "property.client.id" = "my_client_id"\n);\n')])])])])]),e._v(" "),a("h2",{attrs:{id:"keyword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keyword"}},[e._v("#")]),e._v(" keyword")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("CREATE, ROUTINE, LOAD\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);